import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;

public class AvroCompatibilityExample {

    public static void main(String[] args) {
        // Esquema Avro antigo
        String oldSchemaString = "{\"type\":\"record\",\"name\":\"Person\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"}]}";

        // Esquema Avro novo com campos adicionais
        String newSchemaString = "{\"type\":\"record\",\"name\":\"Person\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"age\",\"type\":\"int\"}]}";

        // Converter strings em objetos Schema
        Schema oldSchema = new Schema.Parser().parse(oldSchemaString);
        Schema newSchema = new Schema.Parser().parse(newSchemaString);

        // Gerar um esquema intermediário personalizado
        Schema intermediateSchema = generateIntermediateSchema(oldSchema, newSchema);

        // Converter o esquema intermediário em uma string
        String intermediateSchemaString = intermediateSchema.toString();

        // Exibir o esquema intermediário
        System.out.println("Esquema intermediário:");
        System.out.println(intermediateSchemaString);
    }

    private static Schema generateIntermediateSchema(Schema oldSchema, Schema newSchema) {
        // Construir um novo esquema intermediário usando o SchemaBuilder
        SchemaBuilder.FieldAssembler<Schema> fieldAssembler = SchemaBuilder.record("Intermediate")
                .fields();

        // Adicionar os campos do esquema antigo ao esquema intermediário
        for (Schema.Field field : oldSchema.getFields()) {
            fieldAssembler = fieldAssembler.name(field.name()).type(field.schema()).noDefault();
        }

        // Adicionar os campos do esquema novo ao esquema intermediário, ignorando campos em conflito
        for (Schema.Field field : newSchema.getFields()) {
            if (!oldSchema.getField(field.name()).isPresent()) {
                fieldAssembler = fieldAssembler.name(field.name()).type(field.schema()).noDefault();
            }
        }

        // Finalizar a construção do esquema intermediário
        Schema intermediateSchema = fieldAssembler.endRecord();
        return intermediateSchema;
    }
}
